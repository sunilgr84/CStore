import { Injectable } from '@angular/core';
import * as pdfMake from 'pdfmake/build/pdfmake';
import * as pdfFonts from 'pdfmake/build/vfs_fonts';
import { logoBase64 } from '@models/logoBase64';
import { ConstantService } from '../constant/constant.service';
import * as moment from 'moment';
import { DayReconModule } from 'src/app/layout/admin-accounting/day-recon/day-recon.module';
import { UtilityService } from '@shared/services/utility/utility.service';
@Injectable()
export class PDFGenrateService {

    userInfo: any;
    constructor(private constantsService: ConstantService, private utilityService: UtilityService) {
    }

    PDFGenrate(reportName: any, colWidths: any, body: any, _startDate: any, _endDate: any, isLandscape?: any, pageSize?: any) {
        this.userInfo = this.constantsService.getUserInfo();
        const userName = this.userInfo.userName;
        pdfMake.vfs = pdfFonts.pdfMake.vfs;
        let dateCol: any;
        if (_startDate && _endDate) {
            dateCol = {
                text: reportName + '\n' + 'From : ' + _startDate + ' To : ' + _endDate,
                fontSize: 11,
                alignment: 'center',
                margin: [0, 0, 0, 0],
            };
        } else {
            dateCol = {
                text: reportName,
                fontSize: 13,
                alignment: 'center',
                margin: [0, 10, 0, 0],
            };
        }
        const invoicepdf = {
            footer: function (currentPage, pageCount) {
                return {
                    margin: 10,
                    columns: [
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Generated By : ' + userName,
                                }
                            ],
                            alignment: 'left'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Page Number' + currentPage.toString() + ' of ' + pageCount,
                                }
                            ],
                            alignment: 'center'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Date :' + moment().format('MM-DD-YYYY hh:mm:ss'),
                                }
                            ],
                            alignment: 'right'
                        }
                    ]
                };

            },
            header: {
                headerRows: 1,
                margin: [5, 5, 5, 5],
                columns: [
                    {
                        image: logoBase64.data,
                        fit: [50, 30],
                        margin: [35, 0, 10, 5],
                        alignment: 'left'
                    },
                    dateCol,
                    {
                        text: this.userInfo.companyName,
                        fontSize: 11,
                        alignment: 'right',
                        margin: [0, 10, 35, 0],
                    },
                ]
            },
            pageOrientation: isLandscape ? 'landscape' : 'portrait',
            pageSize: pageSize ? 'A2' : 'A4',

            content: [
                {
                    pageMargins: [0, 15, 0, 0],
                    style: 'customName',
                    table:
                    {
                        headerRows: 1,
                        widths: colWidths,
                        body: body
                    },
                },

            ],
            styles: {
                header: {
                    fontSize: 12,
                    bold: true,
                    italics: true
                },
                subheader: {
                    fontSize: 15,
                    bold: true
                },
                quote: {
                    italics: true
                },
                text: {
                    fontSize: 6,
                },
                customName: {
                    //    margin: [0, 10, 0, 0],
                    fontSize: 9,
                }

            }
        };
        pdfMake.createPdf(invoicepdf).open();
    }
    PDFGenrateByLotteryInventory(reportName: any, colWidths: any, body: any, _date: any, storeLocation: any, invType, isLandscape?: any) {
        this.userInfo = this.constantsService.getUserInfo();
        const userName = this.userInfo.userName;
        pdfMake.vfs = pdfFonts.pdfMake.vfs;
        const invoicepdf = {
            footer: function (currentPage, pageCount) {
                return {
                    margin: 10,
                    columns: [
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Generated By : ' + userName,
                                }
                            ],
                            alignment: 'left'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Page Number' + currentPage.toString() + ' of ' + pageCount,
                                }
                            ],
                            alignment: 'center'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Date :' + moment().format('MM-DD-YYYY hh:mm:ss'),
                                }
                            ],
                            alignment: 'right'
                        }
                    ]
                };

            },
            header: {
                headerRows: 1,
                margin: [5, 5, 5, 5],
                columns: [
                    {
                        image: logoBase64.data,
                        fit: [50, 30],
                        margin: [35, 0, 10, 5],
                        alignment: 'left'
                    },
                    {
                        text: reportName,
                        fontSize: 13,
                        alignment: 'center',
                        margin: [0, 10, 0, 0],
                    },
                    {
                        text: storeLocation,
                        fontSize: 11,
                        alignment: 'right',
                        margin: [0, 10, 35, 0],
                    },
                    {
                        text: invType,
                        fontSize: 11,
                        alignment: 'right',
                        margin: [0, 10, 35, 0],
                    }, {
                        text: _date,
                        fontSize: 11,
                        alignment: 'right',
                        margin: [0, 10, 35, 0],
                    }
                ]
            },
            pageOrientation: isLandscape ? 'landscape' : 'portrait',
            content: [
                {
                    pageMargins: [0, 15, 0, 0],
                    style: 'customName',
                    table:
                    {
                        headerRows: 1,
                        widths: colWidths,
                        body: body
                    },
                },

            ],
            styles: {
                header: {
                    fontSize: 12,
                    bold: true,
                    italics: true
                },
                subheader: {
                    fontSize: 15,
                    bold: true
                },
                quote: {
                    italics: true
                },
                text: {
                    fontSize: 6,
                },
                customName: {
                    //    margin: [0, 10, 0, 0],
                    fontSize: 9,
                }

            }
        };
        return pdfMake.createPdf(invoicepdf);
    }

    PDFMultiDayReconGenrate(reportName: any, colWidths: any, body: any, _startDate: any, _endDate: any, isLandscape?: any
        , storeName?: any, storeAddress?: any) {
        this.userInfo = this.constantsService.getUserInfo();
        const userName = this.userInfo.userName;
        const address = storeAddress !== null ? storeAddress : '';
        pdfMake.vfs = pdfFonts.pdfMake.vfs;
        const invoicepdf = {
            footer: function (currentPage, pageCount) {
                return {
                    margin: 10,
                    columns: [
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    margin: [5, 15, 5, 5],
                                    text: 'Report Generated By : ' + userName,
                                },
                            ],
                            alignment: 'left'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    margin: [25, 15, 5, 5],
                                    text: 'Note : *Network Total = (Credit,Debit,Crind Credit & Crind Debit)',
                                    fontSize: 10
                                }
                            ],
                            alignment: 'left'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Page Number ' + currentPage.toString() + ' of ' + pageCount,
                                }
                            ],
                            alignment: 'center'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Date : ' + moment().format('MM-DD-YYYY hh:mm:ss'),
                                }
                            ],
                            alignment: 'right'
                        }
                    ]
                };

            },
            // header: {
            //     headerRows: 1,
            //     margin: [5, 5, 5, 5],
            //     columns: [
            //         {
            //             image: logoBase64.data,
            //             fit: [50, 30],
            //             margin: [35, 0, 10, 5],
            //             alignment: 'left'
            //         },
            //         {
            //             text: reportName + '\n' + _startDate,
            //             fontSize: 13,
            //             alignment: 'center',
            //             margin: [0, 10, 0, 0],
            //         },
            //         {
            //             text: this.userInfo.companyName,
            //             fontSize: 11,
            //             alignment: 'right',
            //             margin: [0, 10, 35, 0],
            //         }
            //     ]
            // },
            pageOrientation: isLandscape ? 'landscape' : 'portrait',
            pageSize: 'A2',
            content: [
                {
                    headerRows: 1,
                    // margin: [5, 5, 5, 5],
                    columns: [
                        {
                            image: logoBase64.data,
                            fit: [50, 50],
                            margin: [0, 0, 10, 5],
                            alignment: 'left'
                        },
                        {
                            text: reportName + '\n\n' + 'Form : ' + _startDate + ' To : ' + _endDate,
                            fontSize: 13,
                            alignment: 'center',
                            margin: [0, 5, 0, 0],
                        },
                        {
                            text: this.userInfo.companyName + '\n' + ' Location: ' + storeName + '\n'
                                + address,
                            fontSize: 14,
                            alignment: 'right',
                            margin: [0, 0, 35, 0],
                        }
                    ]
                },
                {
                    pageMargins: [0, 10, 0, 0],
                    style: 'customName',
                    table:
                    {
                        headerRows: 1,
                        // widths: colWidths,
                        body: body
                    },
                },
            ],
            styles: {
                header: {
                    fontSize: 12,
                    bold: true,
                    italics: true
                },
                subheader: {
                    fontSize: 15,
                    bold: true
                },
                quote: {
                    italics: true
                },
                text: {
                    fontSize: 6,
                },
                customName: {
                    //    margin: [0, 10, 0, 0],
                    fontSize: 9,
                    widths: '*'
                }

            }
        };
        return pdfMake.createPdf(invoicepdf);
        // pdfMake.createPdf(invoicepdf).open();
    }

    PDFDayRecon(block1, block2, block3, block4, block5, block6, block7, block8, block9, block10, block11, block12, block12ColWidths, movementHeaderDetails: any, shift: any, storeName?: any, storeAddress?: any) {
        this.userInfo = this.constantsService.getUserInfo();
        pdfMake.vfs = pdfFonts.pdfMake.vfs;
        storeAddress = storeAddress ? storeAddress : '';
        const DayreconDate = moment(movementHeaderDetails.beginTime).format('MM-DD-YYYY HH:mm') + " - " + moment(movementHeaderDetails.endTime).format('MM-DD-YYYY HH:mm');
        const invoicepdf = {
            footer: function (currentPage, pageCount) {
                return {
                    margin: 10,
                    columns: [
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Generated By :',
                                }
                            ],
                            alignment: 'left'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Page Number' + currentPage.toString() + ' of ' + pageCount,
                                }
                            ],
                            alignment: 'center'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Date :' + moment().format('MM-DD-YYYY hh:mm:ss'),
                                }
                            ],
                            alignment: 'right'
                        }
                    ]
                };

            },
            header: {
                headerRows: 1,
                margin: [5, 5, 5, 5],
                columns: [
                    {
                        image: logoBase64.data,
                        fit: [50, 30],
                        margin: [35, 0, 10, 5],
                        alignment: 'left'
                    },
                    {
                        text: '',
                        fontSize: 13,
                        alignment: 'center',
                        margin: [0, 10, 0, 0],
                    },
                    // {
                    //     text: this.userInfo.companyName,
                    //     fontSize: 11,
                    //     alignment: 'right',
                    //     margin: [0, 10, 35, 0],
                    // }
                ]
            },
            // watermark: { text: 'test watermark', color: 'blue', opacity: 0.3, bold: true, italics: false },
            pageMargins: [15, 40, 10, 15],
            pageOrientation: 'portrait',
            content: [
                {
                    columns: [
                        {
                            text: `${storeName} \n${shift}\n${DayreconDate}`,
                            style: 'header',
                            alignment: 'center',
                            margin: [0, 0]
                        }
                    ]
                },
                {
                    margin: [0, 25, 0, 15],
                    fontSize: 10,
                    table: {
                        widths: ['*', '*', '*', '*'],
                        body: [[
                            {
                                text: 'Sales Tax: ' + block1.totalAmount, alignment: 'center', background: '#eff2f8'
                            },
                            {
                                text: 'Total POS Sales: ' + block1.totalPosSales, alignment: 'center', background: '#eff2f8'
                            },
                            {
                                text: 'Total MOP: ' + block1.totalMopAmount, alignment: 'center', background: '#eff2f8'
                            },
                            {
                                text: 'Short Over: ' + block1.shortOver, alignment: 'center', background: '#eff2f8'
                            }
                        ]
                        ]
                    }
                    // columnGap: 5
                },
                {
                    margin: [0, 5, 0, 5],
                    fontSize: 10,
                    widths: ['*', '*', '*'],
                    columns: [
                        {
                            text: 'MOP Sale', alignment: 'center'
                        },
                        {
                            text: 'Fuel Sales', alignment: 'center'
                        },
                        {
                            text: 'Total POS Sales', alignment: 'center'
                        }
                    ],
                    columnGap: 5
                },
                {
                    margin: [0, 5, 0, 15],
                    fontSize: 7,
                    widths: ['*', '*', '*'],
                    columns: [
                        {
                            table: {
                                widths: [60, 40, 50],
                                body: block3
                            },
                            layout: 'lightHorizontalLines'
                        },
                        {
                            table: {
                                widths: [25, 45, 40, 45],
                                body: block4
                            },
                            layout: 'lightHorizontalLines'
                        },
                        {
                            table: {
                                widths: [80, 50],
                                body: block7
                            },
                            layout: 'lightHorizontalLines',
                        }
                    ],
                    columnGap: 10
                },
                {
                    margin: [0, 15, 0, 15],
                    fontSize: 10,
                    table: {
                        widths: ['*', '*', '*', '*', '*'],
                        body: [[
                            {
                                text: 'Critical Stats', alignment: 'right', border: [false, false, false, false],
                            },
                            {
                                text: '', border: [false, false, true, false],
                            },
                            {
                                text: 'Transactions: ' + block1.totalTransactions, alignment: 'center', background: '#eff2f8'
                            },
                            {
                                text: 'Reconciled Pay Out : ' + block1.reconciledPayOut, alignment: 'center', background: '#eff2f8'
                            },
                            {
                                text: 'Unreconciled Pay Out : ' + block1.unreconciledPay, alignment: 'center', background: '#eff2f8'
                            }
                        ]]
                    },
                    columnGap: 5
                },
                {
                    margin: [0, 5, 0, 15],
                    fontSize: 7,
                    columns: [
                        {
                            table: {
                                widths: [60, 40, 50],
                                body: block2
                            },
                            layout: 'lightHorizontalLines',
                        },
                        {
                            table: {
                                widths: [40, 40, 30, 40, 50],
                                body: block6
                            },
                            layout: 'lightHorizontalLines',
                        },
                    ],
                    columnGap: 10
                },
                {
                    margin: [0, 5, 0, 5],
                    fontSize: 10,
                    widths: ['*', '*'],
                    columns: [
                        {
                            text: 'ATM', alignment: 'center'
                        },
                        {
                            text: '', alignment: 'center'
                        }
                    ],
                    columnGap: 5
                },
                {
                    margin: [0, 5, 0, 15],
                    fontSize: 7,
                    columns: [
                        {
                            headerRows: 1,
                            table: {
                                widths: [40, 40, 30, 40, 50],
                                body: block11
                            },
                            layout: 'lightHorizontalLines',
                        }
                    ],
                    columnGap: 10
                },
                {
                    margin: [0, 15, 0, 15],
                    fontSize: 10,
                    table: {
                        widths: ['*', '*'],
                        body: [[
                            {
                                text: 'Bank Deposit : ' + block1.totalBankDeposit, alignment: 'center', background: '#eff2f8'
                            },
                            {
                                text: 'Lottery Deposit : ' + block1.lotteryBankDeposit, alignment: 'center', background: '#eff2f8'
                            }
                        ]]
                    },
                },
                {
                    margin: [0, 5, 0, 15],
                    fontSize: 7,
                    columns: [
                        {
                            table: {
                                widths: block12ColWidths,
                                body: block12
                            },
                            layout: 'lightHorizontalLines'
                        }
                    ],
                    columnGap: 10
                },
                // {
                //     margin: [0, 25, 0, 0],
                //     fontSize: 7.5,
                //     columns: [
                //         {
                //             headerRows: 1,
                //             table: {
                //                 widths: 'auto',
                //                 body: block8
                //             },
                //             layout: 'lightHorizontalLines',
                //         }

                //     ],
                //     columnGap: 13
                // },
                // {
                //     margin: [0, 25, 0, 0],
                //     fontSize: 7.5,
                //     columns: [
                //         {
                //             // headerRows: 1,
                //             table: {
                //                 widths: 'auto',
                //                 body: block5
                //             },
                //             layout: 'lightHorizontalLines',
                //         }
                //         // {
                //         //     headerRows: 1,
                //         //     table: {
                //         //         widths: '*',
                //         //         body: block9
                //         //     },
                //         //     layout: 'lightHorizontalLines',
                //         // },
                //         // {
                //         //     headerRows: 1,
                //         //     table: {
                //         //         widths: '*',
                //         //         body: block10
                //         //     },
                //         //     layout: 'lightHorizontalLines',
                //         // }
                //     ],
                //     columnGap: 10
                // }
            ],
            styles: {
                header: {
                    fontSize: 12,
                    bold: true,
                    // alignment: 'justify'
                },
                tableHeader: {
                    fontSize: 15,
                    bold: true,
                },
                table: {
                    margin: [2, 2, 2, 2]
                },
                tableFooter: {
                    fontSize: 11,
                    bold: true,
                }
                , subnormal: {
                    fontSize: 8,
                    color: '#A9A9A9'
                }
            }
        };

        pdfMake.createPdf(invoicepdf).open();
    }

    generateDayReconReportPDF(reportName: any, block1: any, block2: any, block3: any, block4: any, _startDate: any, _endDate: any, storeName?: any, storeAddress?: any) {
        this.userInfo = this.constantsService.getUserInfo();
        pdfMake.vfs = pdfFonts.pdfMake.vfs;
        storeAddress = storeAddress ? storeAddress : '';
        const dayReconPDF = {
            footer: function (currentPage, pageCount) {
                return {
                    margin: 10,
                    columns: [
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Generated By :',
                                }
                            ],
                            alignment: 'left'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Page Number' + currentPage.toString() + ' of ' + pageCount,
                                }
                            ],
                            alignment: 'center'
                        },
                        {
                            fontSize: 9,
                            text: [
                                {
                                    text: '--------------------------------------------------------------------------' +
                                        '\n',
                                    margin: [0, 20]
                                },
                                {
                                    text: 'Report Date :' + moment().format('MM-DD-YYYY hh:mm:ss'),
                                }
                            ],
                            alignment: 'right'
                        }
                    ]
                };

            },
            header: {
                headerRows: 1,
                margin: [5, 5, 5, 5],
                columns: [
                    {
                        image: logoBase64.data,
                        fit: [50, 50],
                        margin: [0, 0, 10, 5],
                        alignment: 'left'
                    },
                    {
                        text: reportName + '\n\n' + 'Form : ' + _startDate + ' To : ' + _endDate,
                        fontSize: 13,
                        alignment: 'center',
                        margin: [0, 5, 0, 0],
                    },
                    {
                        text: this.userInfo.companyName + '\n' + ' Location: ' + storeName + '\n'
                            + storeAddress,
                        fontSize: 14,
                        alignment: 'right',
                        margin: [0, 0, 35, 0],
                    }
                ]
            },
            pageMargins: [15, 40, 10, 10],
            pageOrientation: 'portrait',
            content: [
                {
                    pageMargins: [0, 15, 0, 0],
                    style: 'customName',
                    table:
                    {
                        headerRows: 1,
                        widths: block1.colWidths,
                        body: block1.body
                    },
                },

            ],
            styles: {
                header: {
                    fontSize: 12,
                    bold: true,
                    // alignment: 'justify'
                },
                tableHeader: {
                    fontSize: 15,
                    bold: true,
                },
                table: {
                    margin: [2, 2, 2, 2]
                },
                tableFooter: {
                    fontSize: 11,
                    bold: true,
                }
                , subnormal: {
                    fontSize: 8,
                    color: '#A9A9A9'
                }
            }
        };
        pdfMake.createPdf(dayReconPDF).open();
    }
}
